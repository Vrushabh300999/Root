# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm test
    - name: PHP Code Sniffer (php-actions)
  # You may pin to the exact commit or the version.
  # uses: php-actions/phpcs@0a99a2845164005c597c165cd45dc594d8fe6c1d
  runs-on: vrushabh300999
  with:
    # What version of PHPCS to use
    version: # optional, default is latest
    # What version of PHP to use
    php_version: # optional, default is latest
    # Path to a vendored phpcs binary
    vendored_phpcs_path: # optional
    # One or more files and/or directories to check
    path: 
    # The name or path of the coding standard to use
    standard: 
    # A comma separated list of sniff codes to include checking (all sniffs must be part of the specified standard)
    sniffs: # optional
    # A comma separated list of sniff codes to exclude from checking (all sniffs must be part of the specified standard)
    exclude: # optional
    # A comma separated list of patterns to ignore files and directories
    ignore: # optional
    # The number of spaces each tab represents
    tab_width: # optional
    # Print either the "full", "xml", "checkstyle", "csv", "json", "junit", "emacs", "source", "summary", "diff", "svnblame", "gitblame", "hgblame" or "notifysend" report, or specify the path to a custom report class, (the "full" report is printed by default)
    report: # default is full
    # Write the report to the specified file path
    report_file: # optional
    # How many columns wide screen reports should be printed or set to "auto" to use current screen width, where supported
    report_width: # optional
    # A path to strip from the front of file paths inside reports
    basepath: # optional
    # A comma separated list of files to run before processing begins
    bootstrap: # optional
    # The encoding of the files being checked (default is utf-8)
    encoding: # optional
    # A comma separated list of file extensions to check. The type of the file can be specified using: ext/type e.g., module/php,es/js
    extensions: # optional
    # The minimum severity required to display an error or warning
    severity: # optional
    # The minimum severity required to display an error
    error_severity: # optional
    # The minimum severity required to display a warning
    warning_severity: # optional
    # Exit with a zero error code despite the presence of warnings
    ignore_warnings_on_exit: # optional
    # Exit with a zero error code despite the presence of errors
    ignore_errors_on_exit: # optional
    # Extra arguments to pass to the phpcs binary
    args: # optional
          
